{"ast":null,"code":"var _jsxFileName = \"F:\\\\HTML5\\\\H5-1920\\\\\\u7B2C\\u4E09\\u9636\\u6BB5\\\\elm-\\\\elm\\\\src\\\\pages\\\\login\\\\children\\\\index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport { getUserInfo } from \"../reducer\";\nimport \"../../../assets/css/login/loginConnect.css\";\n\nclass LoginConnect extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          new Promise((resolve, reject) => {\n            this.props.getUserInfo(values);\n            resolve();\n          }).then(_ => {\n            this.props.history.push(\"/profile\");\n          }); //但数据调取成功之后,进行页面的跳转\n\n          if (sessionStorage.getItem(\"username\") || localStorage.getItem(\"username\")) {\n            this.props.history.push(\"/profile\");\n          } // console.log('Received values of form: ', values);\n\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      style: {\n        padding: \"70px 20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\"), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\"), \"Or \", React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"register now!\"))));\n  }\n\n}\n\nconst LoginConnects = Form.create({\n  name: 'normal_login'\n})(LoginConnect);\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserInfo\n})(withRouter(LoginConnects));","map":{"version":3,"sources":["F:/HTML5/H5-1920/第三阶段/elm-/elm/src/pages/login/children/index.js"],"names":["React","Component","Fragment","connect","withRouter","Form","Icon","Input","Button","Checkbox","getUserInfo","LoginConnect","handleSubmit","e","preventDefault","props","form","validateFields","err","values","Promise","resolve","reject","then","_","history","push","sessionStorage","getItem","localStorage","render","getFieldDecorator","padding","rules","required","message","color","valuePropName","initialValue","LoginConnects","create","name","mapStateToProps","state","login"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport {getUserInfo} from \"../reducer\"\r\nimport  \"../../../assets/css/login/loginConnect.css\"\r\nclass LoginConnect extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                new Promise ((resolve,reject)=>{\r\n                    this.props.getUserInfo(values);\r\n                    resolve()\r\n                }).then(_=>{\r\n                    this.props.history.push(\"/profile\")\r\n                })\r\n                //但数据调取成功之后,进行页面的跳转\r\n                if(sessionStorage.getItem(\"username\") || localStorage.getItem(\"username\")){\r\n                    this.props.history.push(\"/profile\")\r\n                }\r\n               \r\n                // console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Fragment>\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\" style={{padding:\"70px 20px\"}}>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: 'Please input your username!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: 'Please input your Password!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('remember', {\r\n                            valuePropName: 'checked',\r\n                            initialValue: true,\r\n                        })(<Checkbox>Remember me</Checkbox>)}\r\n                        <a className=\"login-form-forgot\" href=\"\">\r\n                            忘记密码\r\n          </a>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            登录\r\n          </Button>\r\n                        Or <a href=\"\">register now!</a>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst LoginConnects = Form.create({ name: 'normal_login' })(LoginConnect);\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        login:state.login\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getUserInfo})(withRouter(LoginConnects));"]},"metadata":{},"sourceType":"module"}